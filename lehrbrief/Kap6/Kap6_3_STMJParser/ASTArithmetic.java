/* Generated By:JJTree: Do not edit this line. ASTArithmetic.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package Kap6.Kap6_3_STMJParser;

import java.util.LinkedList;
import java.util.List;

public
class ASTArithmetic extends ASTExpression {
  protected List<String> operators = new LinkedList<String>();

  public int size() { return jjtGetNumChildren(); }
  public ASTExpression getOperand(int i) {
    return (ASTExpression) jjtGetChild(i);
  }
  public String getOerator(int i) {
    return operators.get(i);
  }
  public void addOperator(String op) { operators.add(op); }

  public ASTArithmetic(int id) {
    super(id);
  }
  public ASTArithmetic(STMJ p, int id) {
    super(p, id);
  }
}
/* JavaCC - OriginalChecksum=94abf4b249d425b60b9dd394cd098c12 (do not edit this line) */
