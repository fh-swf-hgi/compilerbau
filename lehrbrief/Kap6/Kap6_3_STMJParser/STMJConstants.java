/* Generated By:JJTree&JavaCC: Do not edit this line. STMJConstants.java */
package Kap6.Kap6_3_STMJParser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface STMJConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int If = 1;
  /** RegularExpression Id. */
  int Else = 2;
  /** RegularExpression Id. */
  int New = 3;
  /** RegularExpression Id. */
  int Do = 4;
  /** RegularExpression Id. */
  int While = 5;
  /** RegularExpression Id. */
  int Return = 6;
  /** RegularExpression Id. */
  int StringTemplate = 7;
  /** RegularExpression Id. */
  int Class = 8;
  /** RegularExpression Id. */
  int Public = 9;
  /** RegularExpression Id. */
  int Private = 10;
  /** RegularExpression Id. */
  int Static = 11;
  /** RegularExpression Id. */
  int Int = 12;
  /** RegularExpression Id. */
  int VoidT = 13;
  /** RegularExpression Id. */
  int DoubleT = 14;
  /** RegularExpression Id. */
  int StringT = 15;
  /** RegularExpression Id. */
  int Char = 16;
  /** RegularExpression Id. */
  int BooleanT = 17;
  /** RegularExpression Id. */
  int BooleanLiteral = 18;
  /** RegularExpression Id. */
  int Println = 19;
  /** RegularExpression Id. */
  int Print = 20;
  /** RegularExpression Id. */
  int StringLiteral = 21;
  /** RegularExpression Id. */
  int CharLiteral = 22;
  /** RegularExpression Id. */
  int Num = 23;
  /** RegularExpression Id. */
  int IntegerLiteral = 24;
  /** RegularExpression Id. */
  int DoubleLiteral = 25;
  /** RegularExpression Id. */
  int IncOperator = 26;
  /** RegularExpression Id. */
  int MultOperator = 27;
  /** RegularExpression Id. */
  int AddOperator = 28;
  /** RegularExpression Id. */
  int AndOperator = 29;
  /** RegularExpression Id. */
  int OrOperator = 30;
  /** RegularExpression Id. */
  int NotOperator = 31;
  /** RegularExpression Id. */
  int CompOperator = 32;
  /** RegularExpression Id. */
  int AssignOperator = 33;
  /** RegularExpression Id. */
  int Identifier = 34;
  /** RegularExpression Id. */
  int WhiteSpace = 35;
  /** RegularExpression Id. */
  int StartStringTemplate = 39;
  /** RegularExpression Id. */
  int String = 42;
  /** RegularExpression Id. */
  int Variable = 43;
  /** RegularExpression Id. */
  int VariableWithSep = 44;
  /** RegularExpression Id. */
  int EndStringTemplate = 45;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int INCOMMENT = 1;
  /** Lexical state. */
  int INSIDE = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"if\"",
    "\"else\"",
    "\"new\"",
    "\"do\"",
    "\"while\"",
    "\"return\"",
    "\"stringtemplate\"",
    "\"class\"",
    "\"public\"",
    "\"private\"",
    "\"static\"",
    "\"int\"",
    "\"void\"",
    "\"double\"",
    "\"String\"",
    "\"char\"",
    "\"boolean\"",
    "<BooleanLiteral>",
    "\"System.out.println\"",
    "\"System.out.print\"",
    "<StringLiteral>",
    "<CharLiteral>",
    "<Num>",
    "<IntegerLiteral>",
    "<DoubleLiteral>",
    "<IncOperator>",
    "<MultOperator>",
    "<AddOperator>",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "<CompOperator>",
    "\"=\"",
    "<Identifier>",
    "<WhiteSpace>",
    "<token of kind 36>",
    "\"/*\"",
    "<token of kind 38>",
    "<StartStringTemplate>",
    "\"*/\"",
    "<token of kind 41>",
    "<String>",
    "<Variable>",
    "<VariableWithSep>",
    "<EndStringTemplate>",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\".\"",
  };

}
